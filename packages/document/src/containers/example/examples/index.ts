import dynamic from 'next/dynamic';
export const AspectRatioDefault = dynamic<any>(() => import('./AspectRatioDefault').then((component) => component), { ssr: false });
export const AspectRatioMore = dynamic<any>(() => import('./AspectRatioMore').then((component) => component), { ssr: false });
export const AspectRatioVideo = dynamic<any>(() => import('./AspectRatioVideo').then((component) => component), { ssr: false });
export const AvatarDefault = dynamic<any>(() => import('./AvatarDefault').then((component) => component), { ssr: false });
export const AvatarGroup = dynamic<any>(() => import('./AvatarGroup').then((component) => component), { ssr: false });
export const AvatarHoverable = dynamic<any>(() => import('./AvatarHoverable').then((component) => component), { ssr: false });
export const AvatarIcon = dynamic<any>(() => import('./AvatarIcon').then((component) => component), { ssr: false });
export const AvatarImage = dynamic<any>(() => import('./AvatarImage').then((component) => component), { ssr: false });
export const AvatarLink = dynamic<any>(() => import('./AvatarLink').then((component) => component), { ssr: false });
export const AvatarShape = dynamic<any>(() => import('./AvatarShape').then((component) => component), { ssr: false });
export const AvatarSize = dynamic<any>(() => import('./AvatarSize').then((component) => component), { ssr: false });
export const AvatarStacked = dynamic<any>(() => import('./AvatarStacked').then((component) => component), { ssr: false });
export const AvatarSvg = dynamic<any>(() => import('./AvatarSvg').then((component) => component), { ssr: false });
export const AvatarText = dynamic<any>(() => import('./AvatarText').then((component) => component), { ssr: false });
export const BreadcrumbCustomExpander = dynamic<any>(() => import('./BreadcrumbCustomExpander').then((component) => component), { ssr: false });
export const BreadcrumbCustomSeparator = dynamic<any>(() => import('./BreadcrumbCustomSeparator').then((component) => component), { ssr: false });
export const BreadcrumbCustomized = dynamic<any>(() => import('./BreadcrumbCustomized').then((component) => component), { ssr: false });
export const BreadcrumbDefault = dynamic<any>(() => import('./BreadcrumbDefault').then((component) => component), { ssr: false });
export const BreadcrumbLimitation = dynamic<any>(() => import('./BreadcrumbLimitation').then((component) => component), { ssr: false });
export const BreadcrumbSeparator = dynamic<any>(() => import('./BreadcrumbSeparator').then((component) => component), { ssr: false });
export const BrowseDefault = dynamic<any>(() => import('./BrowseDefault').then((component) => component), { ssr: false });
export const CardBackgroundColor = dynamic<any>(() => import('./CardBackgroundColor').then((component) => component), { ssr: false });
export const CardBorderColor = dynamic<any>(() => import('./CardBorderColor').then((component) => component), { ssr: false });
export const CardBorderWidth = dynamic<any>(() => import('./CardBorderWidth').then((component) => component), { ssr: false });
export const CardCustomize = dynamic<any>(() => import('./CardCustomize').then((component) => component), { ssr: false });
export const CardDefault = dynamic<any>(() => import('./CardDefault').then((component) => component), { ssr: false });
export const CardElevation = dynamic<any>(() => import('./CardElevation').then((component) => component), { ssr: false });
export const CardOutlined = dynamic<any>(() => import('./CardOutlined').then((component) => component), { ssr: false });
export const CardTile = dynamic<any>(() => import('./CardTile').then((component) => component), { ssr: false });
export const ClickOutsideDefault = dynamic<any>(() => import('./ClickOutsideDefault').then((component) => component), { ssr: false });
export const CropperArea = dynamic<any>(() => import('./CropperArea').then((component) => component), { ssr: false });
export const CropperAspectRatio = dynamic<any>(() => import('./CropperAspectRatio').then((component) => component), { ssr: false });
export const CropperBackdrop = dynamic<any>(() => import('./CropperBackdrop').then((component) => component), { ssr: false });
export const CropperBackground = dynamic<any>(() => import('./CropperBackground').then((component) => component), { ssr: false });
export const CropperDefault = dynamic<any>(() => import('./CropperDefault').then((component) => component), { ssr: false });
export const CropperDialog = dynamic<any>(() => import('./CropperDialog').then((component) => component), { ssr: false });
export const CropperGuides = dynamic<any>(() => import('./CropperGuides').then((component) => component), { ssr: false });
export const CropperIndicator = dynamic<any>(() => import('./CropperIndicator').then((component) => component), { ssr: false });
export const CropperMode = dynamic<any>(() => import('./CropperMode').then((component) => component), { ssr: false });
export const CropperShape = dynamic<any>(() => import('./CropperShape').then((component) => component), { ssr: false });
export const CropperStyles = dynamic<any>(() => import('./CropperStyles').then((component) => component), { ssr: false });
export const DialogAnimation = dynamic<any>(() => import('./DialogAnimation').then((component) => component), { ssr: false });
export const DialogBackdrop = dynamic<any>(() => import('./DialogBackdrop').then((component) => component), { ssr: false });
export const DialogDefault = dynamic<any>(() => import('./DialogDefault').then((component) => component), { ssr: false });
export const DialogFullHeight = dynamic<any>(() => import('./DialogFullHeight').then((component) => component), { ssr: false });
export const DialogFullWidth = dynamic<any>(() => import('./DialogFullWidth').then((component) => component), { ssr: false });
export const DialogFullscreen = dynamic<any>(() => import('./DialogFullscreen').then((component) => component), { ssr: false });
export const DialogNesting = dynamic<any>(() => import('./DialogNesting').then((component) => component), { ssr: false });
export const DialogPersistent = dynamic<any>(() => import('./DialogPersistent').then((component) => component), { ssr: false });
export const DialogPlacement = dynamic<any>(() => import('./DialogPlacement').then((component) => component), { ssr: false });
export const DialogPrevent = dynamic<any>(() => import('./DialogPrevent').then((component) => component), { ssr: false });
export const DialogScrollable = dynamic<any>(() => import('./DialogScrollable').then((component) => component), { ssr: false });
export const DialogSize = dynamic<any>(() => import('./DialogSize').then((component) => component), { ssr: false });
export const DialogSpecificScrollable = dynamic<any>(() => import('./DialogSpecificScrollable').then((component) => component), { ssr: false });
export const DialogSticky = dynamic<any>(() => import('./DialogSticky').then((component) => component), { ssr: false });
export const DividerCard = dynamic<any>(() => import('./DividerCard').then((component) => component), { ssr: false });
export const DividerCustomize = dynamic<any>(() => import('./DividerCustomize').then((component) => component), { ssr: false });
export const DividerHorizontal = dynamic<any>(() => import('./DividerHorizontal').then((component) => component), { ssr: false });
export const DividerSize = dynamic<any>(() => import('./DividerSize').then((component) => component), { ssr: false });
export const DividerType = dynamic<any>(() => import('./DividerType').then((component) => component), { ssr: false });
export const DividerVertical = dynamic<any>(() => import('./DividerVertical').then((component) => component), { ssr: false });
export const DrawerDefault = dynamic<any>(() => import('./DrawerDefault').then((component) => component), { ssr: false });
export const GridAlignContent = dynamic<any>(() => import('./GridAlignContent').then((component) => component), { ssr: false });
export const GridAlignItems = dynamic<any>(() => import('./GridAlignItems').then((component) => component), { ssr: false });
export const GridAlignSelf = dynamic<any>(() => import('./GridAlignSelf').then((component) => component), { ssr: false });
export const GridAutoSizing = dynamic<any>(() => import('./GridAutoSizing').then((component) => component), { ssr: false });
export const GridDefault = dynamic<any>(() => import('./GridDefault').then((component) => component), { ssr: false });
export const GridGutter = dynamic<any>(() => import('./GridGutter').then((component) => component), { ssr: false });
export const GridGutterX = dynamic<any>(() => import('./GridGutterX').then((component) => component), { ssr: false });
export const GridGutterY = dynamic<any>(() => import('./GridGutterY').then((component) => component), { ssr: false });
export const GridHide = dynamic<any>(() => import('./GridHide').then((component) => component), { ssr: false });
export const GridJustifyContent = dynamic<any>(() => import('./GridJustifyContent').then((component) => component), { ssr: false });
export const GridOffset = dynamic<any>(() => import('./GridOffset').then((component) => component), { ssr: false });
export const GridOrder = dynamic<any>(() => import('./GridOrder').then((component) => component), { ssr: false });
export const GridReverse = dynamic<any>(() => import('./GridReverse').then((component) => component), { ssr: false });
export const GridVertical = dynamic<any>(() => import('./GridVertical').then((component) => component), { ssr: false });
export const GridWrap = dynamic<any>(() => import('./GridWrap').then((component) => component), { ssr: false });
export const IconColor = dynamic<any>(() => import('./IconColor').then((component) => component), { ssr: false });
export const IconCustomColor = dynamic<any>(() => import('./IconCustomColor').then((component) => component), { ssr: false });
export const IconDefault = dynamic<any>(() => import('./IconDefault').then((component) => component), { ssr: false });
export const IconFlip = dynamic<any>(() => import('./IconFlip').then((component) => component), { ssr: false });
export const IconRotate = dynamic<any>(() => import('./IconRotate').then((component) => component), { ssr: false });
export const IconSize = dynamic<any>(() => import('./IconSize').then((component) => component), { ssr: false });
export const IntersectionDefault = dynamic<any>(() => import('./IntersectionDefault').then((component) => component), { ssr: false });
export const IntersectionLazyImage = dynamic<any>(() => import('./IntersectionLazyImage').then((component) => component), { ssr: false });
export const PortalDefault = dynamic<any>(() => import('./PortalDefault').then((component) => component), { ssr: false });
export const PortalStrategy = dynamic<any>(() => import('./PortalStrategy').then((component) => component), { ssr: false });
export const ScrollIndicatorDefault = dynamic<any>(() => import('./ScrollIndicatorDefault').then((component) => component), { ssr: false });
export const SpinnerColor = dynamic<any>(() => import('./SpinnerColor').then((component) => component), { ssr: false });
export const SpinnerCustomSize = dynamic<any>(() => import('./SpinnerCustomSize').then((component) => component), { ssr: false });
export const SpinnerCustomize = dynamic<any>(() => import('./SpinnerCustomize').then((component) => component), { ssr: false });
export const SpinnerDefault = dynamic<any>(() => import('./SpinnerDefault').then((component) => component), { ssr: false });
export const SpinnerSize = dynamic<any>(() => import('./SpinnerSize').then((component) => component), { ssr: false });
export const SpinnerType = dynamic<any>(() => import('./SpinnerType').then((component) => component), { ssr: false });
export const StickyDefault = dynamic<any>(() => import('./StickyDefault').then((component) => component), { ssr: false });
export const StickyStateAttribute = dynamic<any>(() => import('./StickyStateAttribute').then((component) => component), { ssr: false });
export const StickyTop = dynamic<any>(() => import('./StickyTop').then((component) => component), { ssr: false });
export const SwitchChecked = dynamic<any>(() => import('./SwitchChecked').then((component) => component), { ssr: false });
export const SwitchDefault = dynamic<any>(() => import('./SwitchDefault').then((component) => component), { ssr: false });
export const SwitchDisabled = dynamic<any>(() => import('./SwitchDisabled').then((component) => component), { ssr: false });
export const SwitchInset = dynamic<any>(() => import('./SwitchInset').then((component) => component), { ssr: false });
export const SwitchLabels = dynamic<any>(() => import('./SwitchLabels').then((component) => component), { ssr: false });
export const SwitchReverse = dynamic<any>(() => import('./SwitchReverse').then((component) => component), { ssr: false });
export const TabsBelow = dynamic<any>(() => import('./TabsBelow').then((component) => component), { ssr: false });
export const TabsDefault = dynamic<any>(() => import('./TabsDefault').then((component) => component), { ssr: false });
export const TabsGrow = dynamic<any>(() => import('./TabsGrow').then((component) => component), { ssr: false });
export const TabsJustify = dynamic<any>(() => import('./TabsJustify').then((component) => component), { ssr: false });
export const TabsReverse = dynamic<any>(() => import('./TabsReverse').then((component) => component), { ssr: false });
export const TabsSeparate = dynamic<any>(() => import('./TabsSeparate').then((component) => component), { ssr: false });
export const TabsVertical = dynamic<any>(() => import('./TabsVertical').then((component) => component), { ssr: false });
export const TooltipArrows = dynamic<any>(() => import('./TooltipArrows').then((component) => component), { ssr: false });
export const TooltipDefault = dynamic<any>(() => import('./TooltipDefault').then((component) => component), { ssr: false });
export const TooltipPlacement = dynamic<any>(() => import('./TooltipPlacement').then((component) => component), { ssr: false });
export const TooltipTrigger = dynamic<any>(() => import('./TooltipTrigger').then((component) => component), { ssr: false });
export const TransitionDefault = dynamic<any>(() => import('./TransitionDefault').then((component) => component), { ssr: false });
export const TransitionDuration = dynamic<any>(() => import('./TransitionDuration').then((component) => component), { ssr: false });
export const TransitionName = dynamic<any>(() => import('./TransitionName').then((component) => component), { ssr: false });